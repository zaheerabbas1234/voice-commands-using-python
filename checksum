https://www.programiz.com/online-compiler/6RcMdnEDLCtax


https://www.programiz.com/online-compiler/5X1e6GnUnQRmo

https://www.programiz.com/online-compiler/9cfSwvU1pguOi


updated with carry
==================
https://www.programiz.com/online-compiler/99JQS4vSJiaI6

updated
=======
https://www.programiz.com/online-compiler/6LqkYYrKTSTzo

=================================================================================================================================


#include <stdio.h>

int main() 
{
    int a[8], b[8], res[8], ones_complement[8];
    int carry = 0, i;

    printf("Enter 8-bit binary number a (one bit per line):\n");
    for (i = 0; i < 8; i++) 
    {
        scanf("%d", &a[i]);
    }
    printf("Enter 8-bit binary number b (one bit per line):\n");
    for (i = 0; i < 8; i++) 
    {
        scanf("%d", &b[i]);
    }
    // Binary addition
    for (i = 7; i >= 0; i--) 
    {
        int sum = a[i] + b[i] + carry;
        res[i] = sum % 2;
        carry = sum / 2;
    }
    // Handle final carry (wrap-around for 8-bit checksum)
    if (carry == 1) 
    {
        for (i = 7; i >= 0; i--) 
        {
            int sum = res[i] + carry;
            res[i] = sum % 2;
            carry = sum / 2;
            if (carry == 0) break;
        }
    }

    // Print the binary sum
    printf("Sum: ");
    for (i = 0; i < 8; i++) 
    {
        printf("%d", res[i]);
    }
    printf("\n");

    // 1's complement of the sum
    for (i = 0; i < 8; i++) 
    {
        if (res[i] == 0) 
        {
            ones_complement[i] = 1;
        } 
        else 
        {
            ones_complement[i] = 0;
        }
    }
    // Print the 1's complement result
    printf("1's complement of the sum: ");
    for (i = 0; i < 8; i++) 
    {
        printf("%d", ones_complement[i]);
    }
    printf("\n");
    return 0;
}

============================================================================
Enter 8-bit binary number a (one bit per line):
1
0
0
0
0
1
1
1
Enter 8-bit binary number b (one bit per line):
1
1
1
0
0
0
0
0
Sum: 01101000
1's complement of the sum: 10010111
===================================================================================
